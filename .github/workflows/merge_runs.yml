name: 'Deploy Multiarch'

on:
  push:
    branches: [ main ]

env:
  version: v1.0.2

jobs:
  get-branch-information:
    runs-on: ubuntu-latest
    outputs: 
      short-sha: ${{ steps.sha.outputs.short-sha }}
      new-short-sha: ${{ steps.new-sha.outputs.short-sha }}
    steps:
      - name: Pull Branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          show-progress: 'true'
          submodules: 'recursive'
      - name: Get Previous Commit SHA7
        id: sha
        run: |
          export SHA7=$(echo $(git rev-parse HEAD) | cut -c1-7) && \
          echo "short-sha=$SHA7" >> $GITHUB_OUTPUT && \
          echo "Previous SHA: $(git rev-parse HEAD)"
      - name: Get New SHA7
        id: new-sha
        uses: concordia-fsae/firmware/.github/actions/get-short-sha/@master
        with:
          sha: ${{ github.sha }}
  define-matrix:
    runs-on: ubuntu-latest
    needs: get-branch-information
    outputs:
      version: ${{ steps.define.outputs.version }}
    steps:
      - name: Define Matrix
        id: define
        run: |
          echo 'version=["latest", "${{ env.version }}", "${{ needs.get-branch-information.outputs.new-short-sha }}"]' >> $GITHUB_OUTPUT
  build-multiarch:
    runs-on: ubuntu-latest
    needs: [ define-matrix, get-branch-information ]
    strategy:
      matrix:
        version: ${{ fromJSON(needs.define-matrix.outputs.version) }}
    steps:
      - name: Retag
        uses: concordia-fsae/containers/.github/actions/retag_push_image/@main
        with:
          container: ubuntu-noble-lts
          tag-input: ${{ needs.get-branch-information.outputs.short-sha }}
          tag-output: ${{ matrix.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Multiarch SHA Manifest
        uses: concordia-fsae/containers/.github/actions/create_multiarch_manifest/@main
        with:
          container: ubuntu-noble-lts
          tag: ${{ matrix.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
