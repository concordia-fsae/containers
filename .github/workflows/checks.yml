name: 'Build, Tag, Validate Noble LTS'

on:
  pull_request:
    branches: [ main ]

jobs:
  build-noble-lts-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Clean and Pull
        id: pull
        uses: concordia-fsae/firmware/.github/actions/pull/@master
      - name: Build Image
        id: build
        uses: ./.github/actions/build_image/
        with:
          arch: amd64
          container: ubuntu-noble-lts
          tag-prefix: ${{ steps.pull.outputs.short-sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
  build-noble-lts-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Clean and Pull
        id: pull
        uses: concordia-fsae/firmware/.github/actions/pull/@master
      - name: Build Image
        id: build
        uses: ./.github/actions/build_image/
        with:
          arch: arm64
          container: ubuntu-noble-lts
          tag-prefix: ${{ steps.pull.outputs.short-sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
  build-multiarch-manifest:
    runs-on: ubuntu-latest
    needs: [ build-noble-lts-arm64, build-noble-lts-amd64 ]
    outputs:
      short-sha: ${{ steps.sha.outputs.short-sha }}
    steps:
      - name: Get SHA7
        id: sha
        uses: concordia-fsae/firmware/.github/actions/pull/@master
      - name: Build Multiarch SHA Manifest
        uses: ./.github/actions/create_multiarch_manifest/
        with:
          container: ubuntu-noble-lts
          tag: ${{ steps.sha.outputs.short-sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
  validate-container-functionality:
    uses: concordia-fsae/firmware/.github/workflows/build.yml@master
    needs: build-multiarch-manifest
    with:
      build-type: platform
      build-targets: cfr25
      flags: -j32 --flashable-bootloader --package
      artifact-name: artifact-validation
      container: ubuntu-noble-lts:${{ needs.build-multiarch-manifest.outputs.short-sha }}
